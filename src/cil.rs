
#[derive(Debug, Clone)]
#[allow(non_camel_case_types)]
pub enum Opcode {
    Nop,
    Break,
    Ldarg_0,
    Ldarg_1,
    Ldarg_2,
    Ldarg_3,
    Ldloc_0,
    Ldloc_1,
    Ldloc_2,
    Ldloc_3,
    Stloc_0,
    Stloc_1,
    Stloc_2,
    Stloc_3,
    Ldarg_S,
    Ldarga_S,
    Starg_S,
    Ldloc_S,
    Ldloca_S,
    Stloc_S,
    Ldnull,
    Ldc_I4_M1,
    Ldc_I4_0,
    Ldc_I4_1,
    Ldc_I4_2,
    Ldc_I4_3,
    Ldc_I4_4,
    Ldc_I4_5,
    Ldc_I4_6,
    Ldc_I4_7,
    Ldc_I4_8,
    Ldc_I4_S,
    Ldc_I4,
    Ldc_I8,
    Ldc_R4,
    Ldc_R8,
    Dup,
    Pop,
    Jmp,
    Call,
    Calli,
    Ret,
    Br_S,
    Brfalse_S,
    Brtrue_S,
    Beq_S,
    Bge_S,
    Bgt_S,
    Ble_S,
    Blt_S,
    Bne_Un_S,
    Bge_Un_S,
    Bgt_Un_S,
    Ble_Un_S,
    Blt_Un_S,
    Br,
    Brfalse,
    Brtrue,
    Beq,
    Bge,
    Bgt,
    Ble,
    Blt,
    Bne_Un,
    Bge_Un,
    Bgt_Un,
    Ble_Un,
    Blt_Un,
    Switch,
    Ldind_I1,
    Ldind_U1,
    Ldind_I2,
    Ldind_U2,
    Ldind_I4,
    Ldind_U4,
    Ldind_I8,
    Ldind_I,
    Ldind_R4,
    Ldind_R8,
    Ldind_Ref,
    Stind_Ref,
    Stind_I1,
    Stind_I2,
    Stind_I4,
    Stind_I8,
    Stind_R4,
    Stind_R8,
    Add,
    Sub,
    Mul,
    Div,
    Div_Un,
    Rem,
    Rem_Un,
    And,
    Or,
    Xor,
    Shl,
    Shr,
    Shr_Un,
    Neg,
    Not,
    Conv_I1,
    Conv_I2,
    Conv_I4,
    Conv_I8,
    Conv_R4,
    Conv_R8,
    Conv_U4,
    Conv_U8,
    Callvirt,
    Cpobj,
    Ldobj,
    Ldstr,
    Newobj,
    Castclass,
    Isinst,
    Conv_R_Un,
    Unbox,
    Throw,
    Ldfld,
    Ldflda,
    Stfld,
    Ldsfld,
    Ldsflda,
    Stsfld,
    Stobj,
    Conv_Ovf_I1_Un,
    Conv_Ovf_I2_Un,
    Conv_Ovf_I4_Un,
    Conv_Ovf_I8_Un,
    Conv_Ovf_U1_Un,
    Conv_Ovf_U2_Un,
    Conv_Ovf_U4_Un,
    Conv_Ovf_U8_Un,
    Conv_Ovf_I_Un,
    Conv_Ovf_U_Un,
    Box,
    Newarr,
    Ldlen,
    Ldelema,
    Ldelem_I1,
    Ldelem_U1,
    Ldelem_I2,
    Ldelem_U2,
    Ldelem_I4,
    Ldelem_U4,
    Ldelem_I8,
    Ldelem_I,
    Ldelem_R4,
    Ldelem_R8,
    Ldelem_Ref,
    Stelem_I,
    Stelem_I1,
    Stelem_I2,
    Stelem_I4,
    Stelem_I8,
    Stelem_R4,
    Stelem_R8,
    Stelem_Ref,
    Ldelem_Any,
    Stelem_Any,
    Unbox_Any,
    Conv_Ovf_I1,
    Conv_Ovf_U1,
    Conv_Ovf_I2,
    Conv_Ovf_U2,
    Conv_Ovf_I4,
    Conv_Ovf_U4,
    Conv_Ovf_I8,
    Conv_Ovf_U8,
    Refanyval,
    Ckfinite,
    Mkrefany,
    Ldtoken,
    Conv_U2,
    Conv_U1,
    Conv_I,
    Conv_Ovf_I,
    Conv_Ovf_U,
    Add_Ovf,
    Add_Ovf_Un,
    Mul_Ovf,
    Mul_Ovf_Un,
    Sub_Ovf,
    Sub_Ovf_Un,
    Endfinally,
    Leave,
    Leave_S,
    Stind_I,
    Conv_U,
    Arglist,
    Ceq,
    Cgt,
    Cgt_Un,
    Clt,
    Clt_Un,
    Ldftn,
    Ldvirtftn,
    Ldarg,
    Ldarga,
    Starg,
    Ldloc,
    Ldloca,
    Stloc,
    Localloc,
    Endfilter,
    Unaligned,
    Volatile,
    Tail,
    Initobj,
    Constrained,
    Cpblk,
    Initblk,
    No,
    Rethrow,
    Sizeof,
    Refanytype,
    Readonly,
}

impl Opcode {
    fn name(self) -> &'static str {
        let names = [
            "nop",
            "break",
            "ldarg.0",
            "ldarg.1",
            "ldarg.2",
            "ldarg.3",
            "ldloc.0",
            "ldloc.1",
            "ldloc.2",
            "ldloc.3",
            "stloc.0",
            "stloc.1",
            "stloc.2",
            "stloc.3",
            "ldarg.s",
            "ldarga.s",
            "starg.s",
            "ldloc.s",
            "ldloca.s",
            "stloc.s",
            "ldnull",
            "ldc.i4.m1",
            "ldc.i4.0",
            "ldc.i4.1",
            "ldc.i4.2",
            "ldc.i4.3",
            "ldc.i4.4",
            "ldc.i4.5",
            "ldc.i4.6",
            "ldc.i4.7",
            "ldc.i4.8",
            "ldc.i4.s",
            "ldc.i4",
            "ldc.i8",
            "ldc.r4",
            "ldc.r8",
            "dup",
            "pop",
            "jmp",
            "call",
            "calli",
            "ret",
            "br.s",
            "brfalse.s",
            "brtrue.s",
            "beq.s",
            "bge.s",
            "bgt.s",
            "ble.s",
            "blt.s",
            "bne.un.s",
            "bge.un.s",
            "bgt.un.s",
            "ble.un.s",
            "blt.un.s",
            "br",
            "brfalse",
            "brtrue",
            "beq",
            "bge",
            "bgt",
            "ble",
            "blt",
            "bne.un",
            "bge.un",
            "bgt.un",
            "ble.un",
            "blt.un",
            "switch",
            "ldind.i1",
            "ldind.u1",
            "ldind.i2",
            "ldind.u2",
            "ldind.i4",
            "ldind.u4",
            "ldind.i8",
            "ldind.i",
            "ldind.r4",
            "ldind.r8",
            "ldind.ref",
            "stind.ref",
            "stind.i1",
            "stind.i2",
            "stind.i4",
            "stind.i8",
            "stind.r4",
            "stind.r8",
            "add",
            "sub",
            "mul",
            "div",
            "div.un",
            "rem",
            "rem.un",
            "and",
            "or",
            "xor",
            "shl",
            "shr",
            "shr.un",
            "neg",
            "not",
            "conv.i1",
            "conv.i2",
            "conv.i4",
            "conv.i8",
            "conv.r4",
            "conv.r8",
            "conv.u4",
            "conv.u8",
            "callvirt",
            "cpobj",
            "ldobj",
            "ldstr",
            "newobj",
            "castclass",
            "isinst",
            "conv.r.un",
            "unbox",
            "throw",
            "ldfld",
            "ldflda",
            "stfld",
            "ldsfld",
            "ldsflda",
            "stsfld",
            "stobj",
            "conv.ovf.i1.un",
            "conv.ovf.i2.un",
            "conv.ovf.i4.un",
            "conv.ovf.i8.un",
            "conv.ovf.u1.un",
            "conv.ovf.u2.un",
            "conv.ovf.u4.un",
            "conv.ovf.u8.un",
            "conv.ovf.i.un",
            "conv.ovf.u.un",
            "box",
            "newarr",
            "ldlen",
            "ldelema",
            "ldelem.i1",
            "ldelem.u1",
            "ldelem.i2",
            "ldelem.u2",
            "ldelem.i4",
            "ldelem.u4",
            "ldelem.i8",
            "ldelem.i",
            "ldelem.r4",
            "ldelem.r8",
            "ldelem.ref",
            "stelem.i",
            "stelem.i1",
            "stelem.i2",
            "stelem.i4",
            "stelem.i8",
            "stelem.r4",
            "stelem.r8",
            "stelem.ref",
            "ldelem.any",
            "stelem.any",
            "unbox.any",
            "conv.ovf.i1",
            "conv.ovf.u1",
            "conv.ovf.i2",
            "conv.ovf.u2",
            "conv.ovf.i4",
            "conv.ovf.u4",
            "conv.ovf.i8",
            "conv.ovf.u8",
            "refanyval",
            "ckfinite",
            "mkrefany",
            "ldtoken",
            "conv.u2",
            "conv.u1",
            "conv.i",
            "conv.ovf.i",
            "conv.ovf.u",
            "add.ovf",
            "add.ovf.un",
            "mul.ovf",
            "mul.ovf.un",
            "sub.ovf",
            "sub.ovf.un",
            "endfinally",
            "leave",
            "leave.s",
            "stind.i",
            "conv.u",
            "arglist",
            "ceq",
            "cgt",
            "cgt.un",
            "clt",
            "clt.un",
            "ldftn",
            "ldvirtftn",
            "ldarg",
            "ldarga",
            "starg",
            "ldloc",
            "ldloca",
            "stloc",
            "localloc",
            "endfilter",
            "unaligned.",
            "volatile.",
            "tail.",
            "initobj",
            "constrained.",
            "cpblk",
            "initblk",
            "no.",
            "rethrow",
            "sizeof",
            "refanytype",
            "readonly.",
        ];
        let id = self as usize;
        names[id]
    }
}
